variables:
  ConnectedServiceName: 'FlaskR-ServiceConnection'
  WebAppName: 'vdb67-flaskr'

trigger:
- master

pool:
  name: Hosted Ubuntu 1604

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.7'
    architecture: 'x64'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: # Optional

- task: AzureRMWebAppDeployment@4
  displayName: Azure App Service Deploy
  inputs:
    appType: webAppLinux
    RuntimeStack: 'PYTHON|3.7'
    ConnectedServiceName: $(ConnectedServiceName)
    WebAppName: $(WebAppName)
    Package: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'

    # The following command is specific to the python-sample-vscode-flask-tutorial code.
    # You may or may not need a startup command for your own app.

    StartupCommand: 'gunicorn --bind=0.0.0.0 "flaskr:create_app()"'

- script: |
    if [ -d "instance" ]; then
        export FLASK_APP=flaskr
        flask init-db         
    fi
  displayName: 'POST=DEPLOY: init database'  